@page "/video"
@attribute [Authorize(Roles = "Admin,Normal")]

@inject IJSRuntime _JsRuntime
@inject AuthenticationStateProvider _authenticationStateProvider


<h3>Video</h3>

<div class="form-group">
    <label>
        Name:
        <input id="cam_name" size="10" placeholder="HK_ComCam01"/>
    </label>
    <button class="btn btn-primary" id="send_video" @onclick="SendVideo">Send Video</button>
    <button class="btn btn-danger" id="stop_video" @onclick="StopVideo">Stop Video</button>
</div>

<div class="row">
    <div class="col-6">
        <video id="canvas_video" width="320" height="240" autoplay></video>
    </div>
    <div class="col-6">
        <canvas hidden id="canvas_image" width="320" height="240"></canvas>
    </div>    
    <div class="col-6">
        <canvas id="canvas_motion" width="320" height="240"></canvas>
        Threshold of Motion detected: <span id="score_motion">?</span>
    </div>
</div>
<ul id="rx_msg">      
</ul>


@code {
    async Task<string> getUserId()
    {
        var user = (await _authenticationStateProvider.GetAuthenticationStateAsync()).User;
        var UserId = user.FindFirst(u => u.Type.Contains("nameidentifier"))?.Value;
        return UserId;
    }

    private async Task SendVideo()
    {        
        string userId = await getUserId();
        await _JsRuntime.InvokeVoidAsync("SendVideo", userId);      // 자바스크립트 함수 ShowVideo을 호출
    }

    private async Task StopVideo()
    {
        await _JsRuntime.InvokeVoidAsync("StopVideo");      // 자바스크립트 함수 ShowVideo을 호출
    }
}